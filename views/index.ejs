<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>ChatBot</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
  <link rel="stylesheet" href="/styles.css" />
</head>
<body>
  <div id="chat" class="card col-10 mb-3 offset-3">
    <div class="d-flex justify-content-between align-items-center">
      <h1 class="row-4">Try My Chatbot ü§ñ</h1>
      <button class="btn btn-outline-success me-3" onclick="downloadChat()">Download Chat</button>
    </div>
    <div class="container mt-3">
      <div id="messages" class="d-flex flex-column gap-2 p-3 border rounded" style="height: 400px; overflow-y: auto; background-color: #f8f9fa;">
        <!-- messages will be appended here -->
      </div>
    </div>    
    <div class="container mt-4">
      <div class="row g-2 align-items-center">
        <div class="col">
          <input id="userInput" class="form-control" placeholder="Say something..." />
        </div>
        <div class="col-auto">
          <button class="btn btn-outline-warning" onclick="sendMessage()">Send</button>
        </div>
      </div>
    </div>
    
  </div>
  <footer>
    <div class="card">
      <div class="card-header">
        Featured
      </div>
      <div class="card-body">
        <h5 class="card-title">You're using chatbot By sahil</h5>
        <p class="card-text">¬©Ô∏èCopyright Reserved by Sahil|2025|</p>
        <a href="https://gemini.google.com/app" class="btn btn-primary">Google it</a>
      </div>
    </div>
  </footer>

  <script>
    async function sendMessage() {
      const input = document.getElementById('userInput');
      const text = input.value.trim();
      if (!text) return;
  
      appendMessage('You', text, 'user');
  
      const res = await fetch('/api/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message: text })
      });
  
      const data = await res.json();
      appendMessage('Sahil-Bot', data.response, 'bot');
      input.value = '';
    }
    
    function getCurrentTime() {
      const now = new Date();
      let hours = now.getHours();
      let minutes = now.getMinutes();
      const ampm = hours >= 12 ? 'PM' : 'AM';

      hours = hours % 12 || 12; // convert to 12hr format
      minutes = minutes < 10 ? '0' + minutes : minutes;

      return `${hours}:${minutes} ${ampm}`;
    }

    function appendMessage(sender, text, cls) {
      const msgDiv = document.createElement('div');
      msgDiv.classList.add('message-bubble', cls);

      const time = getCurrentTime();

      msgDiv.innerHTML = `
        <div><strong>${sender}</strong> <span style="font-size: 0.8rem; color: #ccc;">(${time})</span></div>
        ${text}
      `;

      const messages = document.getElementById('messages');
      messages.appendChild(msgDiv);
      messages.scrollTop = messages.scrollHeight;
    }
    
    function downloadChat() {
      const messages = document.getElementById('messages').children;
      if (messages.length === 0) {
        alert('No chat messages to download!');
        return;
      }
      
      let chatText = "Chat History with Sahil-Bot\n\n";
      chatText += "Generated on: " + new Date().toLocaleString() + "\n\n";
      
      for (let i = 0; i < messages.length; i++) {
        const sender = messages[i].querySelector('strong').textContent;
        const time = messages[i].querySelector('span').textContent;
        const text = messages[i].textContent.replace(sender, '').replace(time, '').trim();
        
        chatText += `${sender} ${time}\n${text}\n\n`;
      }
      
      const blob = new Blob([chatText], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `Sahil-Bot-Chat-${new Date().toISOString().slice(0, 10)}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
  
    // üëá Enter key listener added below
    document.getElementById('userInput').addEventListener('keydown', function (e) {
      if (e.key === 'Enter') {
        e.preventDefault(); // prevents line break in input
        sendMessage();
      }
    });
  </script>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js" integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq" crossorigin="anonymous"></script>
</body>
</html>